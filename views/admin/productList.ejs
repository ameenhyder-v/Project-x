<%- include("../partials/adminpartials/adminHeader.ejs") %>

<div class="screen-overlay"></div>
<aside class="navbar-aside" id="offcanvas_aside">
    <div class="aside-top">
        <a href="index.html" class="brand-wrap">
            <img src="/assets/imgs/theme/logo.svg" class="logo"
                alt="Nest Dashboard" />
        </a>
        <div>
            <button class="btn btn-icon btn-aside-minimize"><i
                    class="text-muted material-icons md-menu_open"></i></button>
        </div>
    </div>
    <nav>
        <ul class="menu-aside">
            <li class="menu-item">
                <a class="menu-link" href="/admin/dashboard">
                    <i class="icon material-icons md-home"></i>
                    <span class="text">Dashboard</span>
                </a>
            </li>
            <li class="menu-item active">
                <a class="menu-link" href="/admin/productlist">
                    <i class="icon material-icons md-shopping_bag"></i>
                    <span class="text">Products</span>
                </a>
            </li>

            <li class="menu-item">
                <a class="menu-link" href="/admin/addProduct">
                    <i class="icon material-icons md-shopping_cart"></i>
                    <span class="text">Add product</span>
                </a>
            </li>

            <li class="menu-item">
                <a class="menu-link" href="/admin/orders">
                    <i class="icon material-icons md-list_alt"></i>
                    <span class="text">Orders</span>
                </a>
            </li>

            <li class="menu-item">
                <a class="menu-link" href="/admin/users">
                    <i class="icon material-icons md-people"></i>
                    <span class="text">Users</span>
                </a>
            </li>

            <li class="menu-item">
                <a class="menu-link" href="/admin/Categories">
                    <i class="icon material-icons md-layers"></i>
                    <span class="text">Categories</span>
                </a>
            </li>

            <li class="menu-item">
                <a class="menu-link" href="/admin/coupon">
                    <i class="icon material-icons md-local_offer"></i>
                    <span class="text">Coupon Management</span>
                </a>
            </li>

            <li class="menu-item">
                <a class="menu-link" href="/admin/offer">
                    <i class="icon material-icons md-local_offer"></i>
                    <span class="text">Offer Management</span>
                </a>
            </li>
            <li class="menu-item ">
                <a class="menu-link" disabled href="/admin/sales-report">
                    <i class="icon material-icons md-insert_chart"></i>
                    <span class="text">Sales Report</span>
                </a>
            </li>
        </ul>
        <br />
        <br />
    </nav>
</aside>
    <main class="main-wrap">
        <header class="main-header navbar">
            <div class="col-nav">
                <button class="btn btn-icon btn-mobile me-auto" data-trigger="#offcanvas_aside"><i class="material-icons md-apps"></i></button>
                <ul class="nav">
                    <li class="nav-item">
                        <a class="nav-link btn-icon darkmode" href="#"> <i class="material-icons md-nights_stay"></i> </a>
                    </li>
                    <li class="nav-item">
                        <a href="#" class="requestfullscreen nav-link btn-icon"><i class="material-icons md-cast"></i></a>
                    </li>
                </ul>
            </div>
        </header>
        <section class="content-main">
            <div class="content-header">
                <div>
                    <h2 class="content-title card-title">Products List</h2>
                    <p>Lorem ipsum dolor sit amet.</p>
                </div>
                <div>
                    <a href="/admin/addProduct" class="btn btn-primary btn-sm rounded">Create new</a>
                </div>
            </div>
            <div class="card mb-4">
                <header class="card-header">
                    <div class="row align-items-center">
                        
                        <div class="col-md-3 col-12 me-auto mb-md-0 mb-3">
                            <h5>Product Name</h5>
                        </div>
                </header>
                <!-- card-header end// -->
                <div class="card-body">
                    <% allProducts.forEach(product => { %>
                        <article class="itemlist">
                            <div class="row align-items-center">
                                <div class="col-lg-4 col-sm-4 col-8 flex-grow-1 col-name">
                                    <a class="itemside" href="#">
                                        <!-- <div class="left">
                                            <img src="/assets/imgs/items/1.jpg" class="img-sm img-thumbnail" alt="Item" />
                                        </div> -->
                                        <div class="info">
                                            <h6 class="mb-0"><%= product.name %></h6>
                                        </div>
                                    </a>
                                </div>
                                <div class="col-lg-2 col-sm-2 col-4 col-price"><span><%= product.brand %></span></div>
                                <div class="col-lg-2 col-sm-2 col-4 col-price"><span><%= product.categoryId.category %> , <%= product.categoryId.gender %></span></div>
                                <div class="col-lg-2 col-sm-2 col-4 col-status">
                                    <% if (!product.isBlocked) { %>
                                        <button id="block-btn-<%= product._id %>"
                                            style="height: 35px; width: 80px;"
                                            class="btn btn-sm btn-outline-danger rounded font-sm mt-15 block-btn justify-content-center"
                                            data-id="<%= product._id %>"
                                            onclick="blockProduct('<%= product._id %>')">
                                            <i class="material-icons md-block"></i> Block
                                        </button> 
                                    <% } else { %>
                                        <button id="block-btn-<%= product._id %>"
                                            class="btn btn-sm btn-brand rounded font-sm mt-15 unblock-btn justify-content-center"
                                            style="height: 35px; width: 80px;"
                                            data-id="<%= product._id %>"
                                            onclick="blockProduct('<%= product._id %>')">
                                            <i class="material-icons md-check_circle"></i> Unblock
                                        </button>
                                    <% } %>
                                </div>
                                <div class="col-lg-1 col-sm-2 col-4 col-date">
                                    <a href="/admin/load-variant?productId=<%= product._id %>" class="btn btn-sm font-sm rounded btn-brand"> <i class="material-icons md-edit"></i> Variants </a>
                                </div>
                                <div class="col-lg-2 col-sm-2 col-4 col-action text-end">
                                    <a href="#" class="btn btn-sm font-sm rounded btn-brand editProdLink" data-product-id="<%= product._id %>">
                                        <i class="material-icons md-edit"></i> Edit
                                    </a>
                                    <button class="btn btn-sm font-sm btn-light text-danger rounded" onclick="deleteProduct('<%= product._id %>')"> <i class="material-icons md-delete_forever text-danger"></i> Delete </button>
                                </div>
                            </div>
                            <!-- row .// -->
                        </article>
                <% }) %>
                </div>
                <!-- card-body end// -->
            </div>
            <!-- card end// -->
            <!-- !PAGINATION  -->
            <div class="pagination-area mt-30 mb-50">
                <nav aria-label="Page navigation example">
                    <ul class="pagination justify-content-start">
                        <% for(let i = 1; i <= totalPages; i++) { %>
                            <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                                <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                            </li>
                        <% } %>
                        <% if (currentPage < totalPages) { %>
                            <li class="page-item">
                                <a class="page-link" href="?page=<%= currentPage + 1 %>"><i class="material-icons md-chevron_right"></i></a>
                            </li>
                        <% } %>
                    </ul>
                </nav>
            </div>
        </section>


        <!-- modal part -->
        <div class="modal fade dark" id="editProductModal" tabindex="-1" aria-labelledby="editProductModalLabel" aria-hidden="true">
            <div class="modal-dialog" style="max-width: 600px;">
                <div class="modal-content" style="background-color: rgb(68, 68, 68);">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editProductModalLabel">Edit Product</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body" style="background-color: rgb(68, 68, 68);">
                        <form id="edit-product-form">
                            <input type="text" name="productId" class="d-none" id="product_Id" />
                            <div class="mb-4">
                                <label for="productNameModal" class="form-label">Product Name</label>
                                <input type="text" placeholder="Type here" class="form-control" id="productNameModal" required name="productName"/>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Full description</label>
                                <textarea placeholder="Type here" class="form-control" rows="4" name="description" required id="descriptionModal"></textarea>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Brand Name</label>
                                <input type="text" placeholder="Brand Name" class="form-control" id="brand_nameModal" name="brandName">
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Material</label>
                                <input type="text" placeholder="Material" class="form-control" id="materialModal" name="material">
                            </div>
                            <div class="mb-4">
                                <label class=" text-danger h6">Make sure the category and subcatogory are corroct!</label>
                            </div>
                            <div class="row gx-2">
                                <div class="col-sm-6 mb-3">
                                    <label class="form-label">Gender</label>
                                    <select class="form-select" onchange="categoryFinding()" name="gender" id="genderModal">
                                        <option disabled selected hidden>choose..</option>
                                        <option>Male</option>
                                        <option>Female</option>
                                    </select>
                                </div>
                                <div class="col-sm-6 mb-3">
                                    <label class="form-label">Sub-category</label>
                                    <select class="form-select" name="category" id="categoryModal">
                                        <option disabled selected hidden>choose..</option> 
                                    </select>
                                </div>
                            </div>
                            <div class="mb-4">
                                <label for="tagsModal" class="form-label">Tags</label>
                                <input type="text" class="form-control" placeholder="New/Arrival" name="tags" id="tagsModal">
                            </div>
                            <div class="d-grid">
                                <button class="btn btn-light rounded font-sm mr-5 text-body hover-up" type="button" data-bs-dismiss="modal">Cancel</button>
                                <button class="btn btn-md rounded font-sm hover-up" type="button" onclick="updateProduct(event)" >Update Product</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>



<%- include("../partials/adminpartials/adminFooter.ejs") %>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

<script>

    function categoryFinding() {
        const selectedGender = document.getElementById('genderModal');
        const selectedOption = selectedGender.value;
    
        if (selectedOption) {
            fetch(`/admin/check-category?gender=${selectedOption}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok ' + response.statusText);
                    }
                    return response.json();
                })
                .then(data => {
                    console.log('Success:', data);
                    const selectElement = document.getElementById('categoryModal');
                    selectElement.innerHTML = '';
                    data.forEach(item => {
                        const option = document.createElement('option');
                        option.text = item.category;
                        selectElement.appendChild(option);
                    });
                })
                .catch(error => {
                    console.error('There was a problem with the fetch operation:', error);
                });
        } else {
            alert('Please select a gender');
        }
    }
    
    document.addEventListener('DOMContentLoaded', function() {
        document.querySelectorAll('.editProdLink').forEach(function(link) {
            link.addEventListener('click', function(event) {
                event.preventDefault();
                const productId = this.getAttribute('data-product-id');
    
                fetch(`/admin/edit-this-product?productId=${productId}`)
                    .then(response => response.json())
                    .then(data => {
                        const product = data.data; 
                        document.getElementById("product_Id").value = product._id
                        document.getElementById('productNameModal').value = product.name;
                        document.getElementById('descriptionModal').value = product.description;
                        document.getElementById('brand_nameModal').value = product.brand;
                        document.getElementById('materialModal').value = product.material;
                        document.getElementById('genderModal').value = product.gender;
                        document.getElementById('categoryModal').value = product.category;
                        document.getElementById('tagsModal').value = product.tags;
    
                        var myModal = new bootstrap.Modal(document.getElementById('editProductModal'));
                        myModal.show();
                    })
                    .catch(error => {
                        console.error('Error fetching product data:', error);
                    });
            });
        });
    });
    

    async function updateProduct(event) {
        event.preventDefault();
        
        try {
            const editForm = document.getElementById("edit-product-form");
            const formData = new FormData(editForm);
    
            // Convert FormData to URLSearchParams
            const params = new URLSearchParams();
            for (const [key, value] of formData.entries()) {
                params.append(key, value);
            }
    
            // Extract productId from form data
            const productId = formData.get('productId'); // Ensure this is included in your form
    
            const response = await fetch(`/admin/update-product`, {
                method: "PATCH",
                body: params,
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded'
                }
            });
    
            const data = await response.json();
    
            if (response.ok) {
                Swal.fire({
                    title: 'Success!',
                    text: data.message,
                    icon: 'success',
                    confirmButtonText: 'OK'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.reload();
                    }
                });
            } else {
                Swal.fire({
                    title: 'Error!',
                    text: data.message,
                    icon: 'error',
                    confirmButtonText: 'OK'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.reload();
                    }
                });
            }
        } catch (error) {
            Swal.fire({
                title: 'Error!',
                text: 'An unexpected error occurred.',
                icon: 'error',
                confirmButtonText: 'OK'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.reload();
                }
            });
         }
    }

    async function deleteProduct(productId) {
        try {
            const response = await fetch(`/admin/delete-product?productId=${productId}`, {
                method: "DELETE",
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded'
                }
            });
    
            const data = await response.json();
    
            if (response.ok) {
                Swal.fire({
                    title: 'Success!',
                    text: data.message,
                    icon: 'success',
                    confirmButtonText: 'OK'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.reload();
                    }
                });
            } else {
                Swal.fire({
                    title: 'Error!',
                    text: data.message,
                    icon: 'error',
                    confirmButtonText: 'OK'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.reload();
                    }
                });
            }
        } catch (error) {
            Swal.fire({
                title: 'Error!',
                text: 'An unexpected error occurred.',
                icon: 'error',
                confirmButtonText: 'OK'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.reload();
                }
            });
        }
    }
    
    


    function blockProduct(productId) {
        
        axios.post(`/admin/block-product?id=${productId}`)
            .then(response => {
                if (response.data.success) {
                    console.log(response.data.success);
                    let button = document.getElementById(`block-btn-${productId}`);
                    if (button.classList.contains('btn-outline-danger')) {
                        button.classList.remove('btn-outline-danger');
                        button.classList.add('btn-brand');
                        button.innerHTML = '<i class="material-icons md-check_circle"></i> Unblock';
                    } else {
                        button.classList.remove('btn-brand');
                        button.classList.add('btn-outline-danger');
                        button.innerHTML = '<i class="material-icons md-block"></i> Block';
                    }
                } else {
                    alert("An error occurred");
                }
            })
            .catch(error => {
                console.log("Error in blocking and unblocking");
            });
    }
</script>